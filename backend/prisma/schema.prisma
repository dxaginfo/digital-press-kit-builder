// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  musician  Musician?
}

model Musician {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  stageName String?
  bio       String?
  location  String?
  website   String?
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  pressKits PressKit[]
}

model PressKit {
  id           String        @id @default(uuid())
  musician     Musician      @relation(fields: [musicianId], references: [id])
  musicianId   String
  title        String
  description  String?
  theme        String        @default("default")
  isPublic     Boolean       @default(false)
  publicUrl    String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  mediaItems   MediaItem[]
  socialLinks  SocialLink[]
  events       Event[]
  testimonials Testimonial[]
  contacts     Contact[]
  analytics    Analytic[]
}

model MediaItem {
  id           String   @id @default(uuid())
  pressKit     PressKit @relation(fields: [pressKitId], references: [id])
  pressKitId   String
  type         String   // enum: photo, audio, video, document
  title        String
  description  String?
  fileUrl      String?
  thumbnailUrl String?
  externalUrl  String?
  order        Int      @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model SocialLink {
  id         String   @id @default(uuid())
  pressKit   PressKit @relation(fields: [pressKitId], references: [id])
  pressKitId String
  platform   String
  url        String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Event {
  id         String    @id @default(uuid())
  pressKit   PressKit  @relation(fields: [pressKitId], references: [id])
  pressKitId String
  name       String
  venue      String?
  city       String?
  country    String?
  date       DateTime?
  description String?
  ticketUrl  String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Testimonial {
  id         String    @id @default(uuid())
  pressKit   PressKit  @relation(fields: [pressKitId], references: [id])
  pressKitId String
  quote      String
  author     String
  source     String?
  date       DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Contact {
  id         String   @id @default(uuid())
  pressKit   PressKit @relation(fields: [pressKitId], references: [id])
  pressKitId String
  name       String
  role       String?
  email      String?
  phone      String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Analytic {
  id         String   @id @default(uuid())
  pressKit   PressKit @relation(fields: [pressKitId], references: [id])
  pressKitId String
  visitorIp  String
  referrer   String?
  userAgent  String?
  viewedAt   DateTime @default(now())
}